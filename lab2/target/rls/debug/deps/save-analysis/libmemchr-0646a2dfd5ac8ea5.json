{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2","program":"/home/serlog/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memchr","/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"libc\"","--cfg","feature=\"use_std\"","-C","metadata=0646a2dfd5ac8ea5","-C","extra-filename=-0646a2dfd5ac8ea5","--out-dir","/home/serlog/Escritorio/Raúl/Semestre-2020-II/Paralelos/parallel_computing/lab2/target/rls/debug/deps","-L","dependency=/home/serlog/Escritorio/Raúl/Semestre-2020-II/Paralelos/parallel_computing/lab2/target/rls/debug/deps","--extern","libc=/home/serlog/Escritorio/Raúl/Semestre-2020-II/Paralelos/parallel_computing/lab2/target/rls/debug/deps/liblibc-23fefe4002e8e222.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/serlog/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/serlog/Escritorio/Raúl/Semestre-2020-II/Paralelos/parallel_computing/lab2/target/rls/debug/deps/libmemchr-0646a2dfd5ac8ea5.rmeta"},"prelude":{"crate_id":{"name":"memchr","disambiguator":[11934591269235799747,2587393572434068378]},"crate_root":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src","external_crates":[{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[12566764934142816634,7407009243720577158]}}],"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":0,"byte_end":27820,"line_start":1,"line_end":881,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":0,"byte_end":27820,"line_start":1,"line_end":881,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":67}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"!\nThis crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.\n*/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":0,"byte_end":136,"line_start":1,"line_end":4,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1621,"byte_end":1627,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" An iterator for memchr\n","sig":null,"attributes":[{"value":"/ An iterator for memchr","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1583,"byte_end":1609,"line_start":69,"line_end":69,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr>::new","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1777,"byte_end":1852,"line_start":79,"line_end":79,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3590,"byte_end":3596,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"/ A safe interface to `memchr`.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2965,"byte_end":2998,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2999,"byte_end":3002,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Returns the index corresponding to the first occurrence of `needle` in","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3003,"byte_end":3077,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3078,"byte_end":3124,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3125,"byte_end":3128,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ memchr reduces to super-optimized machine code at around an order of","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3129,"byte_end":3201,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ magnitude faster than `haystack.iter().position(|&b| b == needle)`.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3202,"byte_end":3273,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ (See benchmarks.)","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3274,"byte_end":3295,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3296,"byte_end":3299,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3300,"byte_end":3313,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3314,"byte_end":3317,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the first position of a byte in a byte string.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3318,"byte_end":3391,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3392,"byte_end":3395,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3396,"byte_end":3407,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"/ use memchr::memchr;","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3408,"byte_end":3431,"line_start":134,"line_end":134,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3432,"byte_end":3435,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3436,"byte_end":3478,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memchr(b'k', haystack), Some(8));","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3479,"byte_end":3527,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3528,"byte_end":3535,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":3536,"byte_end":3553,"line_start":139,"line_end":139,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5530,"byte_end":5537,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"/ A safe interface to `memrchr`.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5074,"byte_end":5108,"line_start":181,"line_end":181,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5109,"byte_end":5112,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Returns the index corresponding to the last occurrence of `needle` in","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5113,"byte_end":5186,"line_start":183,"line_end":183,"column_start":1,"column_end":74}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5187,"byte_end":5233,"line_start":184,"line_end":184,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5234,"byte_end":5237,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5238,"byte_end":5251,"line_start":186,"line_end":186,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5252,"byte_end":5255,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the last position of a byte in a byte string.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5256,"byte_end":5328,"line_start":188,"line_end":188,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5329,"byte_end":5332,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5333,"byte_end":5344,"line_start":190,"line_end":190,"column_start":1,"column_end":12}},{"value":"/ use memchr::memrchr;","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5345,"byte_end":5369,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5370,"byte_end":5373,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5374,"byte_end":5416,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memrchr(b'o', haystack), Some(17));","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5417,"byte_end":5467,"line_start":194,"line_end":194,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5468,"byte_end":5475,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":5476,"byte_end":5493,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":6944,"byte_end":6951,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" An iterator for Memchr2\n","sig":null,"attributes":[{"value":"/ An iterator for Memchr2","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":6905,"byte_end":6932,"line_start":235,"line_end":235,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7207,"byte_end":7210,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2>::new","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7120,"byte_end":7195,"line_start":246,"line_end":246,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":8002,"byte_end":8009,"line_start":276,"line_end":276,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for two bytes instead of one.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7933,"byte_end":7994,"line_start":275,"line_end":275,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9154,"byte_end":9161,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" An iterator for Memchr3\n","sig":null,"attributes":[{"value":"/ An iterator for Memchr3","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9115,"byte_end":9142,"line_start":309,"line_end":309,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9425,"byte_end":9428,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3>::new","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new Memchr2 that's initalized to zero with a haystack\n","sig":null,"attributes":[{"value":"/ Create a new Memchr2 that's initalized to zero with a haystack","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9347,"byte_end":9413,"line_start":321,"line_end":321,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":10278,"byte_end":10285,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for three bytes instead of one.","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":10207,"byte_end":10270,"line_start":350,"line_end":350,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2557,"byte_end":2563,"line_start":106,"line_end":106,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7102,"byte_end":7109,"line_start":245,"line_end":245,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7443,"byte_end":7450,"line_start":257,"line_end":257,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9329,"byte_end":9336,"line_start":320,"line_end":320,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9704,"byte_end":9711,"line_start":333,"line_end":333,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":89,"line_end":89,"column_start":23,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":2557,"byte_end":2563,"line_start":106,"line_end":106,"column_start":34,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":4897}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7102,"byte_end":7109,"line_start":245,"line_end":245,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":7443,"byte_end":7450,"line_start":257,"line_end":257,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":36},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9329,"byte_end":9336,"line_start":320,"line_end":320,"column_start":10,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/serlog/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-1.0.2/src/lib.rs","byte_start":9704,"byte_end":9711,"line_start":333,"line_end":333,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":4965}}]}